{"remainingRequest":"/Users/fling/WebstormProjects/todo的副本/node_modules/babel-loader/lib/index.js!/Users/fling/WebstormProjects/todo的副本/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fling/WebstormProjects/todo的副本/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fling/WebstormProjects/todo的副本/src/components/today.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fling/WebstormProjects/todo的副本/src/components/today.vue","mtime":1544874235775},{"path":"/Users/fling/WebstormProjects/todo的副本/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fling/WebstormProjects/todo的副本/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fling/WebstormProjects/todo的副本/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fling/WebstormProjects/todo的副本/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      columns7: [{\n        title: '任务标题',\n        key: 'title',\n        width: 250,\n        align: 'center',\n        tooltip: true\n      }, {\n        title: '开始日期',\n        key: 'beginDate',\n        width: 200,\n        align: 'center',\n        sortable: true\n      }, {\n        title: '结束日期',\n        key: 'deadline',\n        width: 200,\n        align: 'center'\n      }, {\n        title: '标记',\n        key: 'property',\n        width: 200,\n        align: 'center',\n        filters: [{\n          label: '紧急',\n          value: '1'\n        }, {\n          label: '重要',\n          value: '2'\n        }, {\n          label: '一般',\n          value: '3'\n        }, {\n          label: '不急',\n          value: '4'\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === '1') {\n            return row.property == '紧急';\n          } else if (value === '2') {\n            return row.property == '重要';\n          } else if (value === '3') {\n            return row.property == '一般';\n          } else if (value === '4') {\n            return row.property == '不急';\n          }\n        }\n      }, {\n        title: '任务完成度',\n        key: 'complete',\n        align: 'center' // filters: [\n        //     {\n        //         label: '未完成',\n        //         value: '0'\n        //     },\n        //     {\n        //         label: '已完成',\n        //         value: '5'\n        //     }\n        // ],\n        // filterMultiple: false,\n        // filterMethod (value, row) {\n        //     if (value === '0') {\n        //         return row.complete == '未完成';\n        //     } else if (value === '5') {\n        //         return row.complete == '已完成';\n        //     }\n        // }\n\n      }],\n      data6: [],\n      data7: []\n    };\n  },\n  mounted: function mounted() {\n    //加载组件时从服务器获取数据\n    this.getTodayTask();\n  },\n  methods: {\n    getTodayTask: function getTodayTask() {\n      var _this = this;\n\n      //获取今日任务\n      console.log(\"000000000000 你好你好\");\n      var self = this; // var data6 = new array();\n\n      var url = 'http://123.57.45.31:9000/todo/v1/todos'; //  url = 'http://127.0.0.1:9000/todo/v1/todos'\n\n      axios.get(url, {\n        params: {\n          userName: self.$store.state.user.userName,\n          userPassword: self.$store.state.user.userPassword\n        }\n      }).then(function (response) {\n        _this.data6 = [];\n        _this.data7 = [];\n        _this.temp = [];\n\n        var moment = require('moment');\n\n        if (response.data != null && response.data != '') {\n          console.log(response.data);\n          self.data6 = response.data; // console.log(\"222222\" + self.data6);\n\n          console.log(\"55555551 \" + _this.data6.length);\n          console.log('66666666661 ' + _this.data6[0].beginDate);\n\n          for (var i = 0; i < _this.data6.length; i++) {\n            var startTime = _this.data6[i].beginDate.replace(/-/g, '/'); //格式化日期格式\n\n\n            var endTime = _this.data6[i].deadline.replace(/-/g, '/');\n\n            var todayTime = moment().format(\"YYYY-MM-DD\").replace(/-/g, '/');\n            var sTime = new Date(startTime).getTime(); //开始时间距1970年的毫秒\n\n            var eTime = new Date(endTime).getTime(); //结束时间距1970年的毫秒\n\n            var tTime = new Date(todayTime).getTime(); //现在时间距1970年的毫秒\n            // console.log(\"22222222222 \" + tTime - sTime <=0);\n\n            if (tTime - sTime >= 0 && tTime - eTime <= 0) {\n              // console.log(\"1111111111 \" + tTime - eTime);\n              // console.log(\"3333333\" + this.data6[i].property);\n              _this.temp.push(_this.data6[i]);\n\n              _this.data7.push(_this.data6[i]); // console.log('22222222222' + this.temp[i].property);\n              // }\n\n            } // console.log(\"111111111\" + this.temp[i].property);\n\n          }\n\n          console.log(\"666661 \" + _this.data7.length); // console.log(self.data5)\n          // self.data5 = self.data6;\n\n          for (var j = 0; j < _this.data7.length; j++) {\n            if (_this.temp[j].property == 1) {\n              _this.data7[j].property = '紧急'; //将value转化为汉字\n              // console.log('22222222222' + this.data5[i].property);\n            } else if (_this.temp[j].property == 2) {\n              _this.data7[j].property = '重要';\n            } else if (_this.temp[j].property == 3) {\n              _this.data7[j].property = '一般';\n            } else if (_this.temp[j].property == 4) {\n              _this.data7[j].property = '不急';\n            }\n\n            if (_this.temp[j].complete == 0) {\n              _this.data7[j].complete = '未完成';\n            } else if (_this.temp[j].complete == 5) {\n              _this.data7[j].complete = '已完成';\n            }\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n        self.$router.push({\n          path: '/error'\n        });\n      });\n    },\n    open: function open() {\n      this.$Notice.open({\n        title: 'Notification title' // desc: 'Here is the notification description. Here is the notification description. '\n\n      });\n    },\n    getFinishingTask: function getFinishingTask() {\n      var _this2 = this;\n\n      //获取即将结束任务\n      var self = this; // var data6 = new array();\n\n      var url = 'http://123.57.45.31:9000/todo/v1/todos'; //  url = 'http://127.0.0.1:9000/todo/v1/todos'\n\n      axios.get(url, {\n        params: {\n          userName: self.$store.state.user.userName,\n          userPassword: self.$store.state.user.userPassword\n        }\n      }).then(function (response) {\n        _this2.data6 = [];\n        _this2.data7 = [];\n        _this2.temp = [];\n\n        var moment = require('moment');\n\n        if (response.data != null && response.data != '') {\n          self.data6 = response.data;\n\n          for (var i = 0; i < _this2.data6.length; i++) {\n            if (_this2.data6[i].deadline == moment().format(\"YYYY-MM-DD\")) {\n              console.log(\"----------\");\n              self.open(false);\n            }\n          }\n        }\n\n        console.log(\"666661 \" + _this2.data7.length);\n      }).catch(function (error) {\n        console.log(error);\n        self.$router.push({\n          path: '/error'\n        });\n      });\n    },\n    data1: function data1() {\n      var moment = require('moment');\n\n      console.log(\"111111111111 \" + this.data6);\n\n      for (var j = 0; j < this.data6.length; j++) {\n        if (this.data6[j].deadline == moment().format(\"YYYY-MM-DD\")) {\n          //结束日期与今日日期是否相同\n          console.log(\"----------\");\n          this.$Notice.open({\n            title: '任务提醒',\n            desc: this.data6[j].title + '任务 即将结束'\n          });\n        }\n      }\n    },\n    remove: function remove(index) {\n      this.data6.splice(index, 1);\n    }\n  }\n};",{"version":3,"sources":["today.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div style=\"height:30px;\">\n            <div style=\"float:left\">\n                <p style=\"font-size: 20px; padding-left:10px;\">任务列表</p>\n            </div>\n            <div style=\"float:right;padding-right:30px;\" @click=\"data1\">\n                <a>\n                    <Icon type=\"ios-alarm\" size=\"24\" color=\"red\"></Icon>\n                </a>\n            </div>\n        </div>\n        <div style=\"margin-top:20px;\">\n            <Table height=\"400\" border ellipsis :columns=\"columns7\" :data=\"data7\"></Table>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    export default {\n        data () {\n            return {\n                columns7: [\n                    {\n                        title: '任务标题',\n                        key: 'title',\n                        width: 250,\n                        align: 'center',\n                        tooltip: true,\n                    },\n                    {\n                        title: '开始日期',\n                        key: 'beginDate',\n                        width:200,\n                        align: 'center',\n                        sortable:true,\n                    },\n                    {\n                        title: '结束日期',\n                        key: 'deadline',\n                        width:200,\n                        align: 'center'\n                    },\n                    {\n                        title: '标记',\n                        key: 'property',\n                        width:200,\n                        align: 'center',\n                        filters: [\n                            {\n                                label: '紧急',\n                                value: '1'\n                            },\n                            {\n                                label: '重要',\n                                value: '2'\n                            },\n                            {\n                                label: '一般',\n                                value: '3'\n                            },\n                            {\n                                label: '不急',\n                                value: '4'\n                            },\n                        ],\n                        filterMultiple: false,\n                        filterMethod (value, row) {\n                            if (value === '1') {\n                                return row.property == '紧急';\n                            } else if (value === '2') {\n                                return row.property == '重要';\n                            }else if (value === '3') {\n                                return row.property == '一般';\n                            } else if (value === '4') {\n                                return row.property == '不急';\n                            }\n                        }\n                    },\n                    {\n                        title: '任务完成度',\n                        key: 'complete',\n                        align: 'center',\n                        // filters: [\n                        //     {\n                        //         label: '未完成',\n                        //         value: '0'\n                        //     },\n                        //     {\n                        //         label: '已完成',\n                        //         value: '5'\n                        //     }\n                        // ],\n                        // filterMultiple: false,\n                        // filterMethod (value, row) {\n                        //     if (value === '0') {\n                        //         return row.complete == '未完成';\n                        //     } else if (value === '5') {\n                        //         return row.complete == '已完成';\n                        //     }\n                        // }\n                    },\n                ],\n                data6: [],\n                data7: [],\n\n            }\n        },\n        mounted() {\n            //加载组件时从服务器获取数据\n            this.getTodayTask();\n        },\n        methods: {\n            getTodayTask() {    //获取今日任务\n                console.log(\"000000000000 你好你好\");\n                var self = this;\n                // var data6 = new array();\n                var url = 'http://123.57.45.31:9000/todo/v1/todos';\n                //  url = 'http://127.0.0.1:9000/todo/v1/todos'\n\n                axios\n                    .get(url, {\n                        params: {\n                            userName: self.$store.state.user.userName,\n                            userPassword: self.$store.state.user.userPassword,\n                        }\n                    })\n                    .then(response => {\n                        this.data6 = [];\n                        this.data7 = [];\n                        this.temp = [];\n                        let moment = require('moment');\n                        if (response.data != null && response.data != '') {\n                            console.log(response.data);\n                            self.data6 = response.data;\n                            // console.log(\"222222\" + self.data6);\n                            console.log(\"55555551 \" + this.data6.length);\n                            console.log('66666666661 ' + this.data6[0].beginDate);\n                            for (var i = 0; i < this.data6.length; i++) {\n                                var startTime = this.data6[i].beginDate.replace(/-/g, '/');   //格式化日期格式\n                                var endTime = this.data6[i].deadline.replace(/-/g, '/');\n                                var todayTime = moment().format(\"YYYY-MM-DD\").replace(/-/g, '/');\n                                var sTime = new Date(startTime).getTime();   //开始时间距1970年的毫秒\n                                var eTime = new Date(endTime).getTime();     //结束时间距1970年的毫秒\n                                var tTime = new Date(todayTime).getTime();   //现在时间距1970年的毫秒\n                                // console.log(\"22222222222 \" + tTime - sTime <=0);\n                                if (tTime - sTime >= 0 && tTime - eTime <=0) {\n                                    // console.log(\"1111111111 \" + tTime - eTime);\n                                    // console.log(\"3333333\" + this.data6[i].property);\n                                    this.temp.push(this.data6[i]);\n                                    this.data7.push(this.data6[i]);\n                                    // console.log('22222222222' + this.temp[i].property);\n                                    // }\n                                }\n                                // console.log(\"111111111\" + this.temp[i].property);\n                            }\n                            console.log(\"666661 \" + this.data7.length);\n                            // console.log(self.data5)\n                            // self.data5 = self.data6;\n\n                            for (var j = 0; j < this.data7.length; j++) {\n                                if (this.temp[j].property == 1) {\n                                    this.data7[j].property = '紧急';     //将value转化为汉字\n                                    // console.log('22222222222' + this.data5[i].property);\n                                } else if (this.temp[j].property == 2) {\n                                    this.data7[j].property = '重要';\n                                } else if (this.temp[j].property == 3) {\n                                    this.data7[j].property = '一般';\n                                } else if (this.temp[j].property == 4) {\n                                    this.data7[j].property = '不急';\n                                }\n                                if (this.temp[j].complete == 0) {\n                                    this.data7[j].complete = '未完成';\n                                } else if (this.temp[j].complete == 5) {\n                                    this.data7[j].complete = '已完成';\n                                }\n                            }\n\n                        }\n\n\n                    })\n                    .catch(function(error) {\n                        console.log(error)\n                        self.$router.push({ path: '/error' })\n                    })\n            },\n            open () {\n                this.$Notice.open({\n                    title: 'Notification title',\n                    // desc: 'Here is the notification description. Here is the notification description. '\n                });\n            },\n            getFinishingTask(){    //获取即将结束任务\n                var self = this;\n                // var data6 = new array();\n                var url = 'http://123.57.45.31:9000/todo/v1/todos';\n                //  url = 'http://127.0.0.1:9000/todo/v1/todos'\n\n                axios\n                    .get(url, {\n                        params: {\n                            userName: self.$store.state.user.userName,\n                            userPassword: self.$store.state.user.userPassword,\n                        }\n                    })\n                    .then(response => {\n                        this.data6 = [];\n                        this.data7 = [];\n                        this.temp = [];\n                        let moment = require('moment');\n                        if (response.data != null && response.data != '') {\n                            self.data6 = response.data;\n                            for (var i = 0; i < this.data6.length; i++) {\n                                if(this.data6[i].deadline == moment().format(\"YYYY-MM-DD\")){\n                                    console.log(\"----------\");\n                                    self.open(false);\n                                }\n                            }\n                        }\n                            console.log(\"666661 \" + this.data7.length);\n\n                    })\n                    .catch(function(error) {\n                        console.log(error)\n                        self.$router.push({ path: '/error' })\n                    })\n            },\n            data1(){\n                let moment = require('moment');\n                console.log(\"111111111111 \" + this.data6);\n                for(var j = 0;j<this.data6.length;j++){\n                    if(this.data6[j].deadline == moment().format(\"YYYY-MM-DD\")){     //结束日期与今日日期是否相同\n                        console.log(\"----------\");\n                        this.$Notice.open({\n                            title: '任务提醒',\n                            desc: this.data6[j].title + '任务 即将结束'\n                        });\n                    }\n                }\n            },\n            remove (index) {\n                this.data6.splice(index, 1);\n            },\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}